<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
		<node.version>v20.15.1</node.version>
		<npm.version>10.7.0</npm.version>

	</properties>
	<dependencies>

		<!-- spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- spring dependencies -->

		<!-- others -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.12.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.12.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.12.5</version>
		</dependency>
		<!-- others -->

	</dependencies>
	<build>
		<finalName>demo</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

		
		</plugins>
	</build>
	
<profiles>
    <!-- Development profile -->
	<profile>
		<id>dev</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<build>
			<resources>
				<resource>
					<directory>src/main/resources</directory>
					<excludes>
						<exclude>application-dev.properties</exclude> <exclude>application-qa.properties</exclude>
						<exclude>application-uat.properties</exclude> <exclude>application-prod.properties</exclude>
						 
					</excludes>
					<filtering>true</filtering>
				</resource>
			</resources>

			<plugins>
				<!-- Frontend plugin for React -->
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>1.7.6</version>
					<executions>
						<!-- Install Node and npm -->
						<execution>
							<id>Install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<nodeVersion>v20.15.1</nodeVersion> <!-- Adjusted for qa environment -->
								<npmVersion>10.7.0</npmVersion>
							</configuration>
						</execution>
						<!-- Run npm install -->
						<execution>
							<id>npm install</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<arguments>install</arguments>
							</configuration>
						</execution>
						<!-- Run npm build for qa -->
						<execution>
							<id>npm build</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<arguments>run build:dev</arguments> <!-- npm build for QA -->
							</configuration>
						</execution>
					</executions>
					<configuration>
						<workingDirectory>src/frontend</workingDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>Copy my React app into my Spring Boot target static folder</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target/classes/static</outputDirectory>
								<resources>
									<resource>
										<directory>src/frontend/dist</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- react spring config -->
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<tasks>
									<copy
											file="src/main/resources/application-dev.properties"
											tofile="${project.build.outputDirectory}/application.properties" />
								</tasks>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<update>true</update>
						<url>${maven.tomcat.url}</url>
						<path>/TSROW</path>
						<username>${tomcat.username}</username>
						<password>${tomcat.password}</password>
					</configuration>
				</plugin>
			</plugins>
		</build>
	</profile>

    <!-- QA profile -->
    <profile>
        <id>qa</id>
        <build>
            <plugins>
                <!-- Frontend plugin for React -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.7.6</version>
                    <executions>
                        <!-- Install Node and npm -->
                        <execution>
                            <id>Install node and npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <nodeVersion>v20.15.1</nodeVersion> <!-- Adjusted for qa environment -->
                                <npmVersion>10.7.0</npmVersion>
                            </configuration>
                        </execution>
                        <!-- Run npm install -->
                        <execution>
                            <id>npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <arguments>install</arguments>
                            </configuration>
                        </execution>
                        <!-- Run npm build for qa -->
                        <execution>
                            <id>npm build</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <arguments>run build</arguments> <!-- npm build for QA -->
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <workingDirectory>src/frontend</workingDirectory>
                    </configuration>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>


</project>